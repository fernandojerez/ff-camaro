/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */
plugins {
	id  'java-library'
	id  'maven-publish'
	id 	'signing'
}

if(System.env.FF_BUILD_DIR != null){
	new File(file(System.env.FF_BUILD_DIR), 'ff@camaro/build').mkdirs()
	project.buildDir = new File(file(System.env.FF_BUILD_DIR), 'ff@camaro/build')
}

def props = new Properties()
file("repo.properties").withInputStream { props.load(it) }

sourceCompatibility = 14
targetCompatibility = 14

repositories {
	mavenCentral()
} 

dependencies {
    implementation gradleApi()
    compileOnly 'org.apache.maven:maven-model:3.5.2'
	compileOnly 'org.apache.maven:maven-model-builder:3.5.2' 
	implementation 'org.snakeyaml:snakeyaml-engine:1.0' 
}

jar {
	manifest {
		attributes('Implementation-Title': project_group + '@' + project_name,
				   'Implementation-Version': project_version)
	}
} 

publishing {
	publications {
		maven(MavenPublication) {
			from components.java

			groupId = project_group
			artifactId = project_name
			version = project_version
			
			pom {
				name = "FF Camaro"
				description = "Camaro is a build system layer over gradle. Its purporse is to allow the compilation of FF projects."
				url = "https://github.com/fernandojerez/ff-camaro"
				licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
				developers {
                    developer {
                        id = 'fernandojerez'
                        name = 'Fernando Jerez'
                        email = 'fernandojerez@gmail.com'
                    }
                }
				scm {
                    connection = 'scm:git:git://git@github.com:fernandojerez/ff-camaro.git'
                    developerConnection = 'scm:git:ssh://git@github.com:fernandojerez/ff-camaro.git'
                    url = 'https://github.com/fernandojerez/ff-camaro'
                }
			}
		}
	}
	repositories {
		maven {
			url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			credentials {
				username = props.getProperty("sonatypeUsername")
				password = props.getProperty("sonatypePassword")
			}
		}		
	}
} 

ext.set("signing.keyId", props.getProperty("signing.keyId"))
ext.set("signing.password", props.getProperty("signing.password"))
ext.set("signing.secretKeyRingFile", props.getProperty("signing.secretKeyRingFile"))
	
signing {	
    sign publishing.publications.maven
}